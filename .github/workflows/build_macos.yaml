name: "Asteroids MacOS Build"
on: workflow_dispatch

jobs:
  build_macos:
    runs-on: macos-latest
    steps:
      - name: Manual SDL Release Download
        uses: robinraju/release-downloader@v1.10
        with: 
          # The source repository path.
          # Expected format {owner}/{repo}
          # Default: ${{ github.repository }}
          repository: "libsdl-org/SDL"
          
          # A flag to set the download target as latest release
          # The default value is 'false'
          latest: false

          # A flag to download from prerelease. It should be combined with latest flag.
          # The default value is 'false'
          preRelease: false 
          # The github tag. e.g: v1.0.1
          # Download assets from a specific tag/version
          tag: "release-2.30.2"
          
          # The name of the file to download.
          # Use this field only to specify filenames other than tarball or zipball, if any.
          # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
          fileName: "SDL2-2.30.2.dmg"
          
          # Download the attached tarball (*.tar.gz)
          tarBall: false 
          # Download the attached zipball (*.zip)
          zipBall: false
          
          # Relative path under $GITHUB_WORKSPACE to place the downloaded file(s)
          # It will create the target directory automatically if not present
          # eg: out-file-path: "my-downloads" => It will create directory $GITHUB_WORKSPACE/my-downloads
          out-file-path: "sdl-downloaded"

          # Github access token to download files from private repositories
          # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
          # eg: token: ${{ secrets.MY_TOKEN }}
          token: ${{secrets.token}} 


      - name: SDL Release Relocation 
        run: |
          hdiutil attach /sdl-downloaded/SDL2-2.30.2.dmg
          sudo cp -r /Volumes/SDL2/SDL2.framework /Library/Frameworks/

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: cd-testing

      - name: configure and build project
        uses: threeal/cmake-action@main
        with:
          source-dir: AsteroidsSDL/src
          build-dir: out

      - name: Zip Result
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
           zip -r Linux.zip AsteroidsSDL/src out

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.1 # Optional fallback tag to use when no tag can be found
          #workingDirectory: another/path/where/a/git/repo/is/checked/out # Optional alternative working directory
      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.previoustag.outputs.tag }}
          release_name: v${{ steps.previoustag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Linux.zip
          asset_name: Linux.zip
          asset_content_type: application/zip
