name: "Asteroids MacOS Build"
on: workflow_dispatch

jobs:
  build_macos:
    runs-on: macos-latest
    steps:

      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'libsdl-org/SDL'
          version: 'tags/release-2.30.2'
          file: 'SDL2-2.30.2.dmg'
          target: SDL2-2.30.2.dmg
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'libsdl-org/SDL_image'
          version: 'tags/release-2.8.2'
          file: 'SDL2_image-2.8.2.dmg'
          target: SDL2_image-2.8.2.dmg
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'libsdl-org/SDL_ttf'
          version: 'tags/release-2.22.0'
          file: 'SDL2_ttf-2.22.0.dmg'
          target: SDL2_ttf-2.22.0.dmg
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: SDL Releases Relocation 
        run: |
          hdiutil attach SDL2-2.30.2.dmg
          sudo cp -r /Volumes/SDL2/SDL2.framework /Library/Frameworks/
          hdiutil info
          hdiutil detach /dev/disk2s1
          hdiutil attach SDL2_image-2.8.2.dmg
          sudo cp -r /Volumes/SDL2/SDL2_image.framework /Library/Frameworks/
          hdiutil detach /dev/disk2s1 
          hdiutil attach SDL2_ttf-2.22.0.dmg
          sudo cp -r /Volumes/SDL2/SDL2_ttf.framework /Library/Frameworks/
          hdiutil detach /dev/disk2s1 

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: cd-testing

      - name: configure and build project
        uses: threeal/cmake-action@main
        with:
          source-dir: AsteroidsSDL/src
          build-dir: out

      - name: Zip Result
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
           zip -r Linux.zip AsteroidsSDL/src out

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.1 # Optional fallback tag to use when no tag can be found
          #workingDirectory: another/path/where/a/git/repo/is/checked/out # Optional alternative working directory
      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.previoustag.outputs.tag }}
          release_name: v${{ steps.previoustag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Linux.zip
          asset_name: Linux.zip
          asset_content_type: application/zip
