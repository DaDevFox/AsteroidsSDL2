name: "Asteroids Cross-Platform Build"
on: workflow_dispatch

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.previoustag.outputs.tag }}
      release_url: ${{steps.create_release.outputs.upload_url}}
    steps:
      - uses: actions/checkout@master
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          prefix: 'v'
          fallback: 0.1
      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
          strict: false
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semvers.outputs.patch }}
          release_name: ${{ steps.semvers.outputs.v_patch}}
          draft: false
          prerelease: false

  # TODO: Appimage and flatpak
  build_linux:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Install Dependencies
        id: dependencies
        run: |
          sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
          sudo apt-get update -y -qq
          sudo apt install zip
          sudo apt-get install libsdl2-dev
          sudo apt-get install libsdl2-image-dev
          sudo apt-get install libsdl2-ttf-dev

      - uses: actions/checkout@master

      - name: Configure and Build Project
        uses: threeal/cmake-action@main
        with:
          source-dir: AsteroidsSDL/src
          build-dir: out

      - name: Zip Result
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
           cp -r AsteroidsSDL/res/* out
           zip -r Linux.zip out

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_url }} # This pulls from the CREATE RELEASE job above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Linux.zip
          asset_name: Linux.zip
          asset_content_type: application/zip

  build_macos:
    runs-on: macos-latest
    needs: create_release
    steps:
      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'libsdl-org/SDL'
          version: 'tags/release-2.30.2'
          file: 'SDL2-2.30.2.dmg'
          target: SDL2-2.30.2.dmg
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'libsdl-org/SDL_image'
          version: 'tags/release-2.8.2'
          file: 'SDL2_image-2.8.2.dmg'
          target: SDL2_image-2.8.2.dmg
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'libsdl-org/SDL_ttf'
          version: 'tags/release-2.22.0'
          file: 'SDL2_ttf-2.22.0.dmg'
          target: SDL2_ttf-2.22.0.dmg
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: SDL Releases Relocation 
        run: |
          hdiutil info
          hdiutil attach SDL2-2.30.2.dmg
          sudo cp -r /Volumes/SDL2/SDL2.framework /Library/Frameworks/
          hdiutil detach /dev/disk4s1
          hdiutil attach SDL2_image-2.8.2.dmg
          sudo cp -r /Volumes/SDL2_image/SDL2_image.framework /Library/Frameworks/
          hdiutil detach /dev/disk4s1 
          hdiutil attach SDL2_ttf-2.22.0.dmg
          sudo cp -r /Volumes/SDL2_ttf/SDL2_ttf.framework /Library/Frameworks/
          hdiutil detach /dev/disk4s1 

      - uses: actions/checkout@master

      - name: CMake Configure and Build
        uses: threeal/cmake-action@main
        with:
          source-dir: AsteroidsSDL/src
          build-dir: out

      - name: CMake Install
        run: |
          cd out
          cpack --config CPackSourceConfig.cmake 
          cpack --config CPackConfig.cmake 
          cd ../

      #TODO: work on certificate signing: https://localazy.com/blog/how-to-automatically-sign-macos-apps-using-github-actions
      - name: Zip Result
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
        run: |
            cp -r AsteroidsSDL/res/* out
            zip -r OSX.zip out -x out/_CPack_Packages/Darwin/DragNDrop/Asteroids-0.2.0-Darwin/Applications/Xcode_15.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/Headers/ruby -x out/_CPack_Packages/Darwin/DragNDrop/Asteroids-0.2.0-Darwin/Applications/Xcode_14.3.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/Headers/ruby -x out/_CPack_Packages/Darwin/DragNDrop/Asteroids-0.2.0-Darwin/Applications/Xcode_14.3.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.6/Headers/ruby

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./OSX.zip
          asset_name: OSX.zip
          asset_content_type: application/zip
